(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{586:function(e,t,s){"use strict";s.r(t);var v=s(1),_=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"script-标签的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-标签的属性"}},[e._v("#")]),e._v(" script 标签的属性")]),e._v(" "),t("h2",{attrs:{id:"async-和-defer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-和-defer"}},[e._v("#")]),e._v(" async 和 defer")]),e._v(" "),t("p",[e._v("浏览器默认同步加载 script 标签中的 js 脚本，因此当脚本体积较大时，页面会出现卡死的情况。")]),e._v(" "),t("p",[e._v("使用 async 或 defer，可以实现异步加载。")]),e._v(" "),t("p",[e._v("二者的区别")]),e._v(" "),t("ul",[t("li",[e._v("async：一旦脚本完成下载，会马上执行。"),t("strong",[e._v("不会按 script 标签的顺序执行")]),e._v("。")]),e._v(" "),t("li",[e._v("defer：等到整个页面的渲染正常完成（DOM 渲染结束，其他 JS 脚本执行完成），"),t("strong",[e._v("会按 script 标签的顺序执行")]),e._v("。")])]),e._v(" "),t("h2",{attrs:{id:"type-module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-module"}},[e._v("#")]),e._v(' type="module"')]),e._v(" "),t("p",[e._v("添加了"),t("code",[e._v('type="module"')]),e._v("的标签内的代码可以使用 ES Module 的"),t("code",[e._v("import")]),e._v("、"),t("code",[e._v("export")]),e._v("语法")]),e._v(" "),t("p",[e._v("执行顺序的效果等同于"),t("code",[e._v("defer")]),e._v("属性，会等渲染完成后按标签顺序执行。")]),e._v(" "),t("p",[e._v("若同时也添加了"),t("code",[e._v("async")]),e._v("属性，则会按"),t("code",[e._v("async")]),e._v("的逻辑执行")]),e._v(" "),t("h2",{attrs:{id:"type-nomodule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-nomodule"}},[e._v("#")]),e._v(' type="noModule"')]),e._v(" "),t("p",[e._v("用于防止 现代浏览器 加载 旧版 JavaScript 文件，配合 "),t("code",[e._v('type="module"')]),e._v(" 使用，可以实现在不同的浏览器中加载不同类型的 JS 脚本（现代浏览器中使用体积更小的 EsModule 版本，低版本浏览器使用普通 JS）")])])}),[],!1,null,null,null);t.default=_.exports}}]);