(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{601:function(t,e,v){"use strict";v.r(e);var _=v(1),r=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("h2",{attrs:{id:"有哪些常用的生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常用的生命周期"}},[t._v("#")]),t._v(" 有哪些常用的生命周期")]),t._v(" "),e("h3",{attrs:{id:"挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#挂载"}},[t._v("#")]),t._v(" 挂载")]),t._v(" "),e("ul",[e("li",[t._v("constructor")]),t._v(" "),e("li",[t._v("componentWillReceiveProps：props 变化时触发")]),t._v(" "),e("li",[t._v("render")]),t._v(" "),e("li",[t._v("componentDidMount")])]),t._v(" "),e("h3",{attrs:{id:"更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[t._v("#")]),t._v(" 更新")]),t._v(" "),e("ul",[e("li",[t._v("componentWillReceiveProps：在 render 之前，根据 props 计算 state")]),t._v(" "),e("li",[t._v("shouldComponentUpdate：组件更新前触发，通过返回值决定是否重新渲染（返回 false 本次不更新）")]),t._v(" "),e("li",[t._v("render")]),t._v(" "),e("li",[t._v("getSnapshotBeforeUpdate："),e("strong",[t._v("DOM 更新前")]),t._v("触发，作用是在 React 进行 DOM 更新之前获取一些快照数据。\n"),e("ul",[e("li",[t._v("其返回值会作为 componentDidUpdate 的第三个参数")]),t._v(" "),e("li",[t._v("不应该在内部修改 DOM，因为这时的修改可能会在后续被覆盖")])])]),t._v(" "),e("li",[t._v("componentDidUpdate："),e("strong",[t._v("DOM 更新后")]),t._v("触发")])]),t._v(" "),e("h3",{attrs:{id:"卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[t._v("#")]),t._v(" 卸载")]),t._v(" "),e("ul",[e("li",[t._v("componentWillUnmount：组件"),e("strong",[t._v("卸载前")]),t._v("触发（清理定时器、事件监听），此时"),e("strong",[t._v("可以访问 DOM")])])]),t._v(" "),e("h3",{attrs:{id:"错误捕获"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#错误捕获"}},[t._v("#")]),t._v(" 错误捕获")]),t._v(" "),e("ul",[e("li",[t._v("getDerivedStateFromError：组件发生错误时，在渲染时触发，用于更新 state，触发"),e("strong",[t._v("重新渲染")]),t._v("来显示兜底 UI，不能执行副作用操作")]),t._v(" "),e("li",[t._v("componentDidCatch：用于记录异常信息（上报），不影响UI")])]),t._v(" "),e("h2",{attrs:{id:"有哪些生命周期的功能-在函数组件中无法实现对等的功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有哪些生命周期的功能-在函数组件中无法实现对等的功能"}},[t._v("#")]),t._v(" 有哪些生命周期的功能，在函数组件中无法实现对等的功能")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("生命周期")]),t._v(" "),e("th",[t._v("函数组件中的近似替代")]),t._v(" "),e("th",[t._v("无法实现的效果")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("getDerivedStateFromProps")]),t._v(" "),e("td",[t._v("：通过 useEffect + useState 可以实现在 props 变化时更新 state")]),t._v(" "),e("td",[t._v("无法实现**阻止 render **的功能")])]),t._v(" "),e("tr",[e("td",[t._v("shouldComponentUpdate")]),t._v(" "),e("td",[t._v("使用 "),e("code",[t._v("React.memo()")]),t._v(" / "),e("code",[t._v("useMemo()")]),t._v(" 可以优化 props 改变时的渲染时机")]),t._v(" "),e("td",[t._v("无法阻止 state 改变时的渲染")])]),t._v(" "),e("tr",[e("td",[t._v("getSnapshotBeforeUpdate")]),t._v(" "),e("td",[t._v("useLayoutEffect 在"),e("strong",[t._v("DOM 更新后，浏览器绘制前")]),t._v("执行")]),t._v(" "),e("td",[t._v("无法返回快照值给 useEffect 使用")])]),t._v(" "),e("tr",[e("td",[t._v("componentDidCatch")]),t._v(" "),e("td",[t._v("使用 ErrorBoundary （类组件）包裹根组件")]),t._v(" "),e("td",[t._v("需要借助类组件")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);